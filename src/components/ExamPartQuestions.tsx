"use client";

import React, { useState } from "react";
import { Card, CardContent } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import AddMultipleChoiceQuestionModal from "./AddMultipleChoiceQuestionModal";
import GroupPartModal from "./GroupPartModal";

interface Question {
  id: string;
  correctAnswer: string;
  solution: string;
  questionType: string;
  videoLink?: string;
  uploadDate: string;
}

interface ExamPart {
  id: string;
  name: string;
  questions: Question[];
}

interface ExamPartQuestionsProps {
  parts: ExamPart[];
  onDeleteAll: () => void;
  onDeleteQuestion: (partId: string, questionId: string) => void;
  onDeletePart: (partId: string) => void;
  onAddDefaultPart: () => void;
  onAddGroupPart: (partId: string) => void;
  renderPartHeader?: (partId: string) => React.ReactNode;
  onAddOrUpdateQuestion: (partId: string, questionId: string | null, newQuestion: Question) => void;
}

const ExamPartQuestions: React.FC<ExamPartQuestionsProps> = ({
  parts,
  onDeleteAll,
  onDeleteQuestion,
  onDeletePart,
  onAddDefaultPart,
  onAddGroupPart,
  renderPartHeader,
  onAddOrUpdateQuestion,
}) => {
  const [isGroupPartModalOpen, setIsGroupPartModalOpen] = useState(false);

  const openGroupPartModal = () => {
    setIsGroupPartModalOpen(true);
  };

  const closeGroupPartModal = () => {
    setIsGroupPartModalOpen(false);
  };

  return (
    <>
      <Card>
        <div className="flex items-center justify-between px-4 py-2 border-b border-border">
          <h2 className="text-lg font-semibold truncate">ƒê·ªÅ thi</h2>
          <div className="flex items-center gap-2">
            <Button className="bg-cyan-500 hover:bg-cyan-600 text-white" onClick={onAddDefaultPart}>
              + Ph·∫ßn thi m·∫∑c ƒë·ªãnh
            </Button>
            <Button
              className="bg-green-600 hover:bg-green-700 text-white"
              onClick={openGroupPartModal}
            >
              + Ph·∫ßn thi nh√≥m ch·ªß ƒë·ªÅ
            </Button>
          </div>
        </div>
        <CardContent>
          {/* Gi·ªØ nguy√™n to√†n b·ªô ph·∫ßn n·ªôi dung hi·ªÉn th·ªã c√¢u h·ªèi, tab ph·∫ßn thi, n√∫t th√™m c√¢u h·ªèi, n√∫t x√≥a ph·∫ßn thi,... */}
          {parts.length === 0 ? (
            <div className="text-center text-muted-foreground py-8">Ch∆∞a c√≥ ph·∫ßn thi n√†o.</div>
          ) : (
            <div>
              {/* Tab ph·∫ßn thi */}
              <div className="mb-4 border-b border-gray-200 dark:border-gray-700">
                <nav className="-mb-px flex space-x-4" aria-label="Tabs">
                  {parts.map((part, idx) => (
                    <button
                      key={part.id}
                      className={`whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm ${
                        idx === 0
                          ? "border-orange-500 text-orange-600"
                          : "border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300"
                      }`}
                    >
                      {part.name}
                    </button>
                  ))}
                </nav>
              </div>

              {/* B·∫£ng c√¢u h·ªèi */}
              {parts.map((part) => (
                <div key={part.id} className="mb-6">
                  <table className="min-w-full divide-y divide-gray-200 dark:divide-gray-700">
                    <thead className="bg-gray-50 dark:bg-gray-800">
                      <tr>
                        <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">#</th>
                        <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">M√£ c√¢u h·ªèi</th>
                        <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">ƒê√°p √°n</th>
                        <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">Lo·∫°i c√¢u h·ªèi</th>
                        <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">L·ªùi gi·∫£i</th>
                        <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">Video</th>
                        <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">Ng√†y t·∫£i l√™n</th>
                        <th className="px-6 py-3 text-right text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">Thao t√°c</th>
                      </tr>
                    </thead>
                    <tbody className="bg-white divide-y divide-gray-200 dark:bg-gray-900 dark:divide-gray-700">
                      {part.questions.length === 0 ? (
                        <tr>
                          <td colSpan={8} className="text-center py-4 text-muted-foreground">
                            Ch∆∞a c√≥ c√¢u h·ªèi n√†o.
                          </td>
                        </tr>
                      ) : (
                        part.questions.map((q, idx) => (
                          <tr key={q.id}>
                            <td className="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-gray-100">{`C√¢u ${idx + 1}`}</td>
                            <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-gray-100">{q.id}</td>
                            <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-gray-100">{q.correctAnswer}</td>
                            <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-gray-100">{q.questionType}</td>
                            <td className="px-6 py-4 whitespace-nowrap text-sm text-pink-600 dark:text-pink-400">{q.solution || "Ch∆∞a c√≥"}</td>
                            <td className="px-6 py-4 whitespace-nowrap text-sm text-pink-600 dark:text-pink-400">{q.videoLink || "Ch∆∞a c√≥"}</td>
                            <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-gray-100">{q.uploadDate}</td>
                            <td className="px-6 py-4 whitespace-nowrap text-right text-sm font-medium space-x-2">
                              <Button size="sm" variant="ghost" aria-label={`S·ª≠a c√¢u h·ªèi ${q.id}`}>
                                ‚úèÔ∏è
                              </Button>
                              <Button size="sm" variant="destructive" aria-label={`X√≥a c√¢u h·ªèi ${q.id}`}>
                                üóëÔ∏è
                              </Button>
                            </td>
                          </tr>
                        ))
                      )}
                    </tbody>
                  </table>
                </div>
              ))}

              {/* N√∫t thao t√°c c√¢u h·ªèi */}
              <div className="flex flex-wrap gap-2">
                <Button className="bg-blue-600 hover:bg-blue-700 text-white">+TR·∫ÆC NGHI·ªÜM</Button>
                <Button className="bg-blue-600 hover:bg-blue-700 text-white">+TR·∫ÆC NGHI·ªÜM ƒê√öNG SAI</Button>
                <Button className="bg-blue-600 hover:bg-blue-700 text-white">+ƒêI·ªÄN S·ªê/TR·∫¢ L·ªúI NG·∫ÆN</Button>
                <Button className="bg-blue-600 hover:bg-blue-700 text-white">+K√âO TH·∫¢</Button>
                <Button className="bg-blue-600 hover:bg-blue-700 text-white">+TN NHI·ªÄU ƒê√ÅP √ÅN</Button>
                <Button className="bg-blue-600 hover:bg-blue-700 text-white">+ƒê√öNG/SAI</Button>
              </div>

              {/* N√∫t x√≥a ph·∫ßn thi */}
              <div className="mt-4">
                <Button variant="destructive" className="float-right">X√≥a ph·∫ßn thi</Button>
              </div>
            </CardContent>
          </Card>
        </>
      );
    };

export default ExamPartQuestions;